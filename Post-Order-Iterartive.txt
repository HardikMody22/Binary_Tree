class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
         List<Integer> result= new ArrayList<>();
        if(root==null) return result;
        Stack<TreeNode> s1= new Stack<TreeNode>();
        Stack<TreeNode> s2= new Stack<TreeNode>();
       
        s1.push(root);
        while(!s1.isEmpty()){
            TreeNode n1= s1.pop();
            s2.push(n1);
            if(n1.left!=null) s1.push(n1.left);
            if(n1.right!=null) s1.push(n1.right);
        }
        
        while(!s2.isEmpty()){
            TreeNode r= s2.pop();
            result.add(r.val);
        }
        
        return result;
        
    }
}
